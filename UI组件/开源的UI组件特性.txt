一个完整的组件应该包含
	1.html [ui结果]
	2.css  [表现的样式]
	3.js   [操作的行为]
	
使用开源的组件库面临的问题：
	
	1.开源的组件库样式有默认基础样式 
		简单使用方法：
				在引用的项目中重新定义样式,覆盖原来的样式定义[问题： 需要覆盖太多的代码使得代码冗余,修改和维护困难]
		高级使用方法：
				使用开源库推荐的构建工具重新根据项目做定制化的UI [问题：需要对构建系统,和开源项目本身十分了解,并且也要对项目的UI层有足够的理解]
	
	2.开源的组件过于丰富,自己使用太少
		在某些时候我们的项目引入开源组件库后使用的组件很少,但是引入的开源库站的体积挺大
		
	3.使用中开源库和项目代码中的冲突,尤其是在css层面[定义样式的权重大小,样式的继承机制,样式的默认行为]
		注意： css中的样式覆盖是先按定义css的权重再按定义的先后顺序
	
	4.在项目中对现有的开源UI扩展很麻烦
	

使用开源库要注意的地方：
	1.代码风格保持一致
	2.命名空间


页面布局分为两大模块：
	
	1.布局模块
		把页面划分不同的区域,不同的尺寸大小
	
	2.内容模块[组件模块]
		填充布局模块	


HTML组件的编写原则：
	1.组件功能单一  
	2.组件可以组合
	3.内部组件不依赖父级组件  [ 如果依赖过重可以把整个做成一个独立的组件 ]
	
	
制作移动端UI组件库
	常用的组件分类
		按钮[button]
		导航[nav]
