1. 字面量方式
	var obj = {};
2. 构造函数
	var obj = Object();
	function A(){}
	var a = A();
	构造函数创建的步骤：
		1.先实例画一个对象,绑定函数中的this为当前的实例对象
		2.对新创建的对象绑定属性
		3.返回新创建的对象
	
	如果构造函数有return且返回的是一个对象，那么使用new实例化的对象就是返回的这个对象
	
3.以某个为原型创建对象
	var obj = Object.create({});  这个可以实现继承和扩展

通过构造函数方式创建的实例对象内部都有一个指向构造函数原型的指针__proto__
构造函数的原型[prototype]是一个对象可以在上面添加原型方法来实现后台实例继承的方法,对象内部有一个constructor指向构造函数本身

在浏览器中真正的原型链是靠__proto__来维持的

function B(){}
var b = new B();
b.prototype = {}   这里并不是改变原型 只是在实例对象上面添加了一个属性而已


/************************************/
prototype 是函数才有的属性
__proto__ 是每个对象都有的属性 [但是这个不是一个标准的属性,只是部分浏览器实现了而已]
