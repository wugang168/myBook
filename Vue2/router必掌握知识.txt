1.router是通过建立组件和路由的映射,在一个页面中实现切换
2.router是以插件形式加载进vue，所以要先vue.use()，才可以使用
3.内置组件,用来处理路由切换的内置组件
	router-link   内部其实就是一个a标签
	router-view   当路由匹配到了组件,就会把组件的内容替换到router-view中
4.多个路由使用同一个组件来渲染,组件会被缓存,在切换路由的时候,组件的生命周期不会重置,
	要向监听内部的变化,可以使用watch来监听$route属性来现实,内部数据更具url参数渲染数据
5.定义的一级路由会在更实例下的router-view中渲染组件,
	如果一级路由下面有子集路由,子集路由触发触发的时候只能在当前一级路由组件中查询router-view 并渲染组件,如果没有找到不会渲染
6.编程式的导航
	可以使用vuerouter实例的方法来导航, 
	router.push()  		在程序中实现跳转，会加到历史记录中
	router.replace()  	不会加到历史记录
	router.go(n)		在历史记录中穿梭
7.命名路由[可以给路由配置一个名称,方便调用]
8.重定向和别名
	[
		{ path: "", name: "", component: "", redirect: ""}
		{ path: "", name: "", component: "", alias: ""}
	]
9.导航钩子
	全局的
	单个路由的
	组件的
	router.beforeEach(function(to, from, next){
		
	});
10.路由原信息
	在定义的时候可以添加要来确定是否需要登录